[
  {
    "key": "escape escape",
    "command": "workbench.action.exitZenMode",
    "when": "inZenMode"
  },
  {
    "key": "shift+escape",
    "command": "closeReferenceSearchEditor",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "escape",
    "command": "closeReferenceSearchEditor",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "shift+escape",
    "command": "cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "escape",
    "command": "cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "meta+down",
    "command": "cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "shift+meta+down",
    "command": "cursorBottomSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+meta+down",
    "command": "cursorColumnSelectDown",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+meta+left",
    "command": "cursorColumnSelectLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+meta+pagedown",
    "command": "cursorColumnSelectPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+meta+pageup",
    "command": "cursorColumnSelectPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+meta+right",
    "command": "cursorColumnSelectRight",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+meta+up",
    "command": "cursorColumnSelectUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "down",
    "command": "cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "shift+down",
    "command": "cursorDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "meta+right",
    "command": "cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "end",
    "command": "cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "shift+meta+right",
    "command": "cursorEndSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+end",
    "command": "cursorEndSelect",
    "when": "textInputFocus"
  },
  {
    "key": "meta+left",
    "command": "cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "home",
    "command": "cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "shift+meta+left",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+home",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "left",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+left",
    "command": "cursorLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+e",
    "command": "cursorLineEnd",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "cursorLineStart",
    "when": "textInputFocus"
  },
  {
    "key": "pagedown",
    "command": "cursorPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "shift+pagedown",
    "command": "cursorPageDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "pageup",
    "command": "cursorPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "shift+pageup",
    "command": "cursorPageUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "right",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "shift+right",
    "command": "cursorRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "meta+up",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "shift+meta+up",
    "command": "cursorTopSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "up",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "shift+up",
    "command": "cursorUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+backspace",
    "command": "deleteLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+h",
    "command": "deleteLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+backspace",
    "command": "deleteLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "backspace",
    "command": "deleteLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+delete",
    "command": "deleteRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+d",
    "command": "deleteRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "delete",
    "command": "deleteRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "meta+a",
    "command": "editor.action.selectAll",
    "when": "textInputFocus"
  },
  {
    "key": "meta+i",
    "command": "expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+o",
    "command": "lineBreakInsert",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+tab",
    "command": "outdent",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "shift+meta+z",
    "command": "redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+pagedown",
    "command": "scrollLineDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+pageup",
    "command": "scrollLineUp",
    "when": "textInputFocus"
  },
  {
    "key": "meta+pagedown",
    "command": "scrollPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "meta+pageup",
    "command": "scrollPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "tab",
    "command": "tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "meta+z",
    "command": "undo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+escape",
    "command": "removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "escape",
    "command": "removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "meta+f",
    "command": "actions.find"
  },
  {
    "key": "meta+e",
    "command": "actions.findWithSelection"
  },
  {
    "key": "enter",
    "command": "breakpointWidget.action.acceptInput",
    "when": "breakpointWidgetVisible && inBreakpointWidget"
  },
  {
    "key": "shift+escape",
    "command": "closeBreakpointWidget",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "key": "escape",
    "command": "closeBreakpointWidget",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+escape",
    "command": "closeReviewPanel",
    "when": "reviewPanelVisible"
  },
  {
    "key": "escape",
    "command": "closeReviewPanel",
    "when": "reviewPanelVisible"
  },
  {
    "key": "meta+u",
    "command": "cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "alt+right",
    "command": "cursorWordEndRight",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+alt+left",
    "command": "cursorWordPartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+alt+left",
    "command": "cursorWordPartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+alt+right",
    "command": "cursorWordPartRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+alt+right",
    "command": "cursorWordPartRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+left",
    "command": "cursorWordStartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "cursorWordStartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "meta+backspace",
    "command": "deleteAllLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "meta+delete",
    "command": "deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+backspace",
    "command": "deleteWordLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+backspace",
    "command": "deleteWordPartLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+delete",
    "command": "deleteWordPartRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+delete",
    "command": "deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "meta+k meta+c",
    "command": "editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "meta+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "alt+meta+.",
    "command": "editor.action.autoFix",
    "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  {
    "key": "shift+alt+a",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "meta+f2",
    "command": "editor.action.changeAll",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "meta+c",
    "command": "editor.action.clipboardCopyAction",
    "when": "textInputFocus"
  },
  {
    "key": "meta+x",
    "command": "editor.action.clipboardCutAction",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "meta+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "meta+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "meta+k meta+k",
    "command": "editor.action.defineKeybinding",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
  },
  {
    "key": "shift+meta+k",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "f7",
    "command": "editor.action.diffReview.next",
    "when": "isInDiffEditor"
  },
  {
    "key": "shift+f7",
    "command": "editor.action.diffReview.prev",
    "when": "isInDiffEditor"
  },
  {
    "key": "alt+f3",
    "command": "editor.action.dirtydiff.next",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+f3",
    "command": "editor.action.dirtydiff.previous",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+f",
    "command": "editor.action.extensioneditor.showfind",
    "when": "activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "shift+alt+f",
    "command": "editor.action.formatDocument",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "meta+k meta+f",
    "command": "editor.action.formatSelection",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "meta+f12",
    "command": "editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+meta+.",
    "command": "editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+meta+,",
    "command": "editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "meta+]",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+meta+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+i",
    "command": "editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+meta+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+meta+enter",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+meta+\\",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "f8",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "shift+f8",
    "command": "editor.action.marker.prevInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "meta+k meta+d",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "f3",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "meta+g",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "meta+f3",
    "command": "editor.action.nextSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+o",
    "command": "editor.action.organizeImports",
    "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
  },
  {
    "key": "meta+[",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+f12",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+meta+f12",
    "command": "editor.action.peekImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f3",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+meta+g",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+meta+f3",
    "command": "editor.action.previousSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "meta+.",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+f12",
    "command": "editor.action.referenceSearch.trigger",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "meta+k meta+u",
    "command": "editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f12",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "meta+k f12",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+meta+l",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "alt+f1",
    "command": "editor.action.showAccessibilityHelp",
    "when": "editorFocus"
  },
  {
    "key": "shift+f10",
    "command": "editor.action.showContextMenu",
    "when": "textInputFocus"
  },
  {
    "key": "meta+k meta+i",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+meta+right",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+meta+left",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+meta+f",
    "command": "editor.action.startFindReplaceAction"
  },
  {
    "key": "ctrl+shift+m",
    "command": "editor.action.toggleTabFocusMode"
  },
  {
    "key": "alt+z",
    "command": "editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+t",
    "command": "editor.action.transposeLetters",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+meta+space",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "meta+k meta+x",
    "command": "editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "meta+c",
    "command": "editor.action.webvieweditor.copy",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "meta+c",
    "command": "editor.action.webvieweditor.copy",
    "when": "!editorFocus && !inputFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
  },
  {
    "key": "meta+x",
    "command": "editor.action.webvieweditor.cut",
    "when": "!editorFocus && !inputFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
  },
  {
    "key": "meta+x",
    "command": "editor.action.webvieweditor.cut",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "escape",
    "command": "editor.action.webvieweditor.hideFind",
    "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
  },
  {
    "key": "escape",
    "command": "editor.action.webvieweditor.hideFind",
    "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "meta+v",
    "command": "editor.action.webvieweditor.paste",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "meta+v",
    "command": "editor.action.webvieweditor.paste",
    "when": "!editorFocus && !inputFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
  },
  {
    "key": "shift+meta+z",
    "command": "editor.action.webvieweditor.redo",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "shift+meta+z",
    "command": "editor.action.webvieweditor.redo",
    "when": "!editorFocus && !inputFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
  },
  {
    "key": "meta+a",
    "command": "editor.action.webvieweditor.selectAll",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "meta+a",
    "command": "editor.action.webvieweditor.selectAll",
    "when": "!editorFocus && !inputFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
  },
  {
    "key": "meta+f",
    "command": "editor.action.webvieweditor.showFind",
    "when": "!editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
  },
  {
    "key": "meta+f",
    "command": "editor.action.webvieweditor.showFind",
    "when": "!editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "meta+z",
    "command": "editor.action.webvieweditor.undo",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "meta+z",
    "command": "editor.action.webvieweditor.undo",
    "when": "!editorFocus && !inputFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
  },
  {
    "key": "f7",
    "command": "editor.action.wordHighlight.next",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "shift+f7",
    "command": "editor.action.wordHighlight.prev",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "meta+k meta+i",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "f9",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "tab",
    "command": "editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "alt+meta+[",
    "command": "editor.fold",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+0",
    "command": "editor.foldAll",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+/",
    "command": "editor.foldAllBlockComments",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+8",
    "command": "editor.foldAllMarkerRegions",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+1",
    "command": "editor.foldLevel1",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+2",
    "command": "editor.foldLevel2",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+3",
    "command": "editor.foldLevel3",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+4",
    "command": "editor.foldLevel4",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+5",
    "command": "editor.foldLevel5",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+6",
    "command": "editor.foldLevel6",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+7",
    "command": "editor.foldLevel7",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+[",
    "command": "editor.foldRecursively",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+meta+]",
    "command": "editor.unfold",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+j",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+9",
    "command": "editor.unfoldAllMarkerRegions",
    "when": "editorTextFocus"
  },
  {
    "key": "meta+k meta+]",
    "command": "editor.unfoldRecursively",
    "when": "editorTextFocus"
  },
  {
    "key": "tab",
    "command": "insertSnippet",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "key": "ctrl+enter",
    "command": "openReferenceToSide",
    "when": "referenceSearchTreeFocused && referenceSearchVisible"
  },
  {
    "key": "enter",
    "command": "repl.action.acceptInput",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "key": "escape",
    "command": "settings.action.clearSearchResults",
    "when": "inSettingsSearch"
  },
  {
    "key": "meta+.",
    "command": "settings.action.editFocusedSetting",
    "when": "inSettingsSearch"
  },
  {
    "key": "enter",
    "command": "settings.action.focusNextSetting",
    "when": "inSettingsSearch"
  },
  {
    "key": "shift+enter",
    "command": "settings.action.focusPreviousSetting",
    "when": "inSettingsSearch"
  },
  {
    "key": "down",
    "command": "settings.action.focusSettingsFile",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "meta+f",
    "command": "settings.action.search",
    "when": "inSettingsEditor"
  },
  {
    "key": "alt+f5",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+f5",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+escape",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "escape",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+meta+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "shift+meta+1",
    "command": "editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.selectAllMatches",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+meta+c",
    "command": "toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  {
    "key": "alt+meta+l",
    "command": "toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "alt+meta+r",
    "command": "toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "alt+meta+w",
    "command": "toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "tab",
    "command": "jumpToNextSnippetPlaceholder",
    "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
  },
  {
    "key": "shift+tab",
    "command": "jumpToPrevSnippetPlaceholder",
    "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
  },
  {
    "key": "escape",
    "command": "leaveEditorMessage",
    "when": "messageVisible"
  },
  {
    "key": "shift+escape",
    "command": "leaveSnippet",
    "when": "editorTextFocus && inSnippetMode"
  },
  {
    "key": "escape",
    "command": "leaveSnippet",
    "when": "editorTextFocus && inSnippetMode"
  },
  {
    "key": "shift+escape",
    "command": "closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "escape",
    "command": "closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "shift+escape",
    "command": "closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "escape",
    "command": "closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "f4",
    "command": "goToNextReferenceFromEmbeddedEditor",
    "when": "inReferenceSearchEditor"
  },
  {
    "key": "shift+f4",
    "command": "goToPreviousReferenceFromEmbeddedEditor",
    "when": "inReferenceSearchEditor"
  },
  {
    "key": "shift+escape",
    "command": "closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "escape",
    "command": "closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "ctrl+n",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "alt+down",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "down",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+p",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "alt+up",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "up",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "tab",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "enter",
    "command": "acceptSelectedSuggestionOnEnter",
    "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "key": "shift+escape",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "escape",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "insertBestCompletion",
    "when": "atEndOfWord && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "insertNextSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "shift+tab",
    "command": "insertPrevSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "meta+pagedown",
    "command": "selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "pagedown",
    "command": "selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "meta+down",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "down",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "meta+pageup",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "pageup",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "meta+up",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "up",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+alt+space",
    "command": "toggleSuggestionFocus",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "enter",
    "command": "acceptRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "shift+escape",
    "command": "cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "escape",
    "command": "cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "shift+meta+;",
    "command": "breadcrumbs.focus",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "shift+meta+.",
    "command": "breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "alt+right",
    "command": "breadcrumbs.focusNext",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "right",
    "command": "breadcrumbs.focusNext",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "alt+left",
    "command": "breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "left",
    "command": "breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "meta+enter",
    "command": "breadcrumbs.revealFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "space",
    "command": "breadcrumbs.revealFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "meta+enter",
    "command": "breadcrumbs.revealFocusedFromTreeAside",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  {
    "key": "meta+c",
    "command": "problems.action.copy",
    "when": "problemFocus"
  },
  {
    "key": "down",
    "command": "breadcrumbs.selectFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "meta+f",
    "command": "problems.action.focusFilter",
    "when": "problemsViewFocus"
  },
  {
    "key": "meta+down",
    "command": "problems.action.focusProblemsFromFilter",
    "when": "problemsFilterFocus"
  },
  {
    "key": "enter",
    "command": "breadcrumbs.selectFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "shift+meta+.",
    "command": "breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "key": "shift+escape",
    "command": "closeAccessibilityHelp",
    "when": "accessibilityHelpWidgetVisible && editorFocus"
  },
  {
    "key": "escape",
    "command": "closeAccessibilityHelp",
    "when": "accessibilityHelpWidgetVisible && editorFocus"
  },
  {
    "key": "escape",
    "command": "closeReplaceInFilesWidget",
    "when": "replaceInputBoxFocus && searchViewletVisible"
  },
  {
    "key": "alt+meta+c",
    "command": "copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "shift+alt+meta+c",
    "command": "copyRelativeFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "alt+enter",
    "command": "debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  {
    "key": "meta+enter",
    "command": "debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  {
    "key": "meta+backspace",
    "command": "debug.removeBreakpoint",
    "when": "breakpointsFocused && !breakpointSelected"
  },
  {
    "key": "meta+backspace",
    "command": "debug.removeWatchExpression",
    "when": "watchExpressionsFocused && !expressionSelected"
  },
  {
    "key": "shift+f9",
    "command": "editor.debug.action.toggleInlineBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "explorer.openToSide",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "shift+alt+f",
    "command": "filesExplorer.findInFolder",
    "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus && resourceScheme == 'file'"
  },
  {
    "key": "alt+down",
    "command": "history.showNext",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "key": "down",
    "command": "history.showNext",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "key": "alt+up",
    "command": "history.showPrevious",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "key": "up",
    "command": "history.showPrevious",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "key": "escape",
    "command": "keybindings.editor.clearSearchResults",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "meta+c",
    "command": "keybindings.editor.copyKeybindingEntry",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "meta+k meta+k",
    "command": "keybindings.editor.defineKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "down",
    "command": "keybindings.editor.focusKeybindings",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "alt+meta+k",
    "command": "keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "meta+k meta+backspace",
    "command": "keybindings.editor.removeKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "meta+f",
    "command": "keybindings.editor.searchKeybindings",
    "when": "inKeybindings"
  },
  {
    "key": "alt+meta+p",
    "command": "keybindings.editor.toggleSortByPrecedence",
    "when": "inKeybindings"
  },
  {
    "key": "escape",
    "command": "list.clear",
    "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
  },
  {
    "key": "meta+up",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "left",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "right",
    "command": "list.expand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+down",
    "command": "list.expandSelectionDown",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "shift+up",
    "command": "list.expandSelectionUp",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "down",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "home",
    "command": "list.focusFirst",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "end",
    "command": "list.focusLast",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "pagedown",
    "command": "list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "pageup",
    "command": "list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "up",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "meta+down",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "meta+a",
    "command": "list.selectAll",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "space",
    "command": "list.toggleExpand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "meta+backspace",
    "command": "notification.clear",
    "when": "notificationFocus"
  },
  {
    "key": "left",
    "command": "notification.collapse",
    "when": "notificationFocus"
  },
  {
    "key": "right",
    "command": "notification.expand",
    "when": "notificationFocus"
  },
  {
    "key": "enter",
    "command": "notification.toggle",
    "when": "notificationFocus"
  },
  {
    "key": "space",
    "command": "notification.toggle",
    "when": "notificationFocus"
  },
  {
    "key": "home",
    "command": "notifications.focusFirstToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "pageup",
    "command": "notifications.focusFirstToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "end",
    "command": "notifications.focusLastToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "pagedown",
    "command": "notifications.focusLastToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "down",
    "command": "notifications.focusNextToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "up",
    "command": "notifications.focusPreviousToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "down",
    "command": "outline.focusDownHighlighted",
    "when": "outlineFiltered && outlineFocused"
  },
  {
    "key": "up",
    "command": "outline.focusUpHighlighted",
    "when": "outlineFiltered && outlineFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "problems.action.openToSide",
    "when": "problemFocus"
  },
  {
    "key": "meta+.",
    "command": "problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "alt+meta+r",
    "command": "revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "meta+enter",
    "command": "scm.acceptInput",
    "when": "scmRepository"
  },
  {
    "key": "escape",
    "command": "search.action.cancel",
    "when": "listFocus && searchViewletVisible && !inputFocus"
  },
  {
    "key": "meta+c",
    "command": "search.action.copyMatch",
    "when": "fileMatchOrMatchFocus"
  },
  {
    "key": "alt+meta+c",
    "command": "search.action.copyPath",
    "when": "fileMatchOrFolderMatchFocus"
  },
  {
    "key": "f4",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult"
  },
  {
    "key": "shift+f4",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult"
  },
  {
    "key": "meta+up",
    "command": "search.action.focusSearchFromResults",
    "when": "firstMatchFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+enter",
    "command": "search.action.openResultToSide",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "meta+backspace",
    "command": "search.action.remove",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "shift+meta+1",
    "command": "search.action.replace",
    "when": "matchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "alt+meta+enter",
    "command": "search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "shift+meta+enter",
    "command": "search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+meta+1",
    "command": "search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+meta+enter",
    "command": "search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+meta+1",
    "command": "search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "meta+down",
    "command": "search.focus.nextInputBox",
    "when": "inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "meta+up",
    "command": "search.focus.previousInputBox",
    "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "down",
    "command": "settings.action.focusSettingsFromSearch",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "enter",
    "command": "settings.action.focusSettingsList",
    "when": "inSettingsEditor && settingsTocRowFocus"
  },
  {
    "key": "shift+f9",
    "command": "settings.action.showContextMenu",
    "when": "inSettingsEditor"
  },
  {
    "key": "alt+meta+c",
    "command": "toggleSearchCaseSensitive",
    "when": "searchViewletFocus && searchViewletVisible && !fileMatchOrFolderMatchFocus"
  },
  {
    "key": "alt+meta+r",
    "command": "toggleSearchRegex",
    "when": "searchViewletFocus && searchViewletVisible"
  },
  {
    "key": "alt+meta+w",
    "command": "toggleSearchWholeWord",
    "when": "searchViewletFocus && searchViewletVisible"
  },
  {
    "key": "meta+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "meta+k meta+w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "meta+k shift+meta+w",
    "command": "workbench.action.closeAllGroups"
  },
  {
    "key": "meta+k w",
    "command": "workbench.action.closeEditorsInGroup"
  },
  {
    "key": "meta+k f",
    "command": "workbench.action.closeFolder"
  },
  {
    "key": "meta+w",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "alt+meta+t",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "escape",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "meta+k u",
    "command": "workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "meta+w",
    "command": "workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "shift+meta+w",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "alt+f5",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+alt+f5",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "f5",
    "command": "workbench.action.debug.continue",
    "when": "inDebugMode"
  },
  {
    "key": "f6",
    "command": "workbench.action.debug.pause",
    "when": "inDebugMode"
  },
  {
    "key": "shift+meta+f5",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+f5",
    "command": "workbench.action.debug.run",
    "when": "!inDebugMode"
  },
  {
    "key": "f5",
    "command": "workbench.action.debug.start",
    "when": "!inDebugMode"
  },
  {
    "key": "shift+f11",
    "command": "workbench.action.debug.stepOut",
    "when": "inDebugMode"
  },
  {
    "key": "f10",
    "command": "workbench.action.debug.stepOver",
    "when": "inDebugMode"
  },
  {
    "key": "shift+f5",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  {
    "key": "meta+k m",
    "command": "workbench.action.editor.changeLanguageMode"
  },
  {
    "key": "meta+k p",
    "command": "workbench.action.files.copyPathOfActiveFile"
  },
  {
    "key": "meta+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "meta+o",
    "command": "workbench.action.files.openFileFolder"
  },
  {
    "key": "meta+k r",
    "command": "workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "meta+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "alt+meta+s",
    "command": "workbench.action.files.saveAll"
  },
  {
    "key": "shift+meta+s",
    "command": "workbench.action.files.saveAs"
  },
  {
    "key": "meta+k s",
    "command": "workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "meta+k o",
    "command": "workbench.action.files.showOpenedFileInNewWindow"
  },
  {
    "key": "shift+meta+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "meta+k meta+up",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "meta+k meta+down",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "meta+8",
    "command": "workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "meta+5",
    "command": "workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "meta+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "meta+4",
    "command": "workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "meta+k meta+left",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "meta+k meta+right",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "meta+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "meta+7",
    "command": "workbench.action.focusSeventhEditorGroup"
  },
  {
    "key": "meta+0",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "meta+6",
    "command": "workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "meta+3",
    "command": "workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "shift+meta+o",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "escape",
    "command": "workbench.action.hideInterfaceOverview",
    "when": "interfaceOverviewVisible"
  },
  {
    "key": "down",
    "command": "workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "up",
    "command": "workbench.action.interactivePlayground.arrowUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "pagedown",
    "command": "workbench.action.interactivePlayground.pageDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "pageup",
    "command": "workbench.action.interactivePlayground.pageUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "meta+k enter",
    "command": "workbench.action.keepEditor"
  },
  {
    "key": "meta+k meta+r",
    "command": "workbench.action.keybindingsReference"
  },
  {
    "key": "meta+9",
    "command": "workbench.action.lastEditorInGroup"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.lastEditorInGroup"
  },
  {
    "key": "meta+k down",
    "command": "workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "meta+k left",
    "command": "workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "meta+k right",
    "command": "workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "meta+k up",
    "command": "workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "meta+k shift+meta+left",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "meta+k shift+meta+right",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "ctrl+meta+1",
    "command": "workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "ctrl+meta+9",
    "command": "workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "ctrl+meta+right",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+meta+left",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+-",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+shift+-",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "meta+k meta+q",
    "command": "workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "shift+meta+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "shift+meta+]",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+meta+right",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "ctrl+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "ctrl+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "ctrl+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "meta+k meta+s",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "meta+,",
    "command": "workbench.action.openSettings"
  },
  {
    "key": "shift+meta+u",
    "command": "workbench.action.output.toggleOutput"
  },
  {
    "key": "shift+meta+[",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "alt+meta+left",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "meta+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.quickOpenView"
  },
  {
    "key": "meta+q",
    "command": "workbench.action.quit"
  },
  {
    "key": "shift+meta+t",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "shift+meta+h",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "shift+meta+j",
    "command": "workbench.action.search.toggleQueryDetails",
    "when": "searchViewletVisible"
  },
  {
    "key": "meta+k meta+t",
    "command": "workbench.action.selectTheme"
  },
  {
    "key": "alt+meta+tab",
    "command": "workbench.action.showAllEditors"
  },
  {
    "key": "meta+t",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "f1",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "shift+meta+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "meta+\\",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "meta+k meta+\\",
    "command": "workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.switchWindow"
  },
  {
    "key": "shift+meta+b",
    "command": "workbench.action.tasks.build"
  },
  {
    "key": "escape",
    "command": "workbench.action.terminal.clearSelection",
    "when": "terminalFocus && terminalTextSelected && !terminalFindWidgetVisible"
  },
  {
    "key": "meta+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalTextSelected"
  },
  {
    "key": "meta+backspace",
    "command": "workbench.action.terminal.deleteToLineStart",
    "when": "terminalFocus"
  },
  {
    "key": "alt+backspace",
    "command": "workbench.action.terminal.deleteWordLeft",
    "when": "terminalFocus"
  },
  {
    "key": "alt+delete",
    "command": "workbench.action.terminal.deleteWordRight",
    "when": "terminalFocus"
  },
  {
    "key": "f3",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "meta+g",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "f3",
    "command": "workbench.action.terminal.findNextTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "meta+g",
    "command": "workbench.action.terminal.findNextTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "shift+f3",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "shift+meta+g",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "shift+f3",
    "command": "workbench.action.terminal.findPreviousTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "shift+meta+g",
    "command": "workbench.action.terminal.findPreviousTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "meta+f",
    "command": "workbench.action.terminal.focusFindWidget",
    "when": "terminalFocus"
  },
  {
    "key": "meta+f",
    "command": "workbench.action.terminal.focusFindWidget",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "alt+meta+down",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+meta+right",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+meta+up",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "alt+meta+left",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.terminal.hideFindWidget",
    "when": "terminalFindWidgetVisible && terminalFocus"
  },
  {
    "key": "escape",
    "command": "workbench.action.terminal.hideFindWidget",
    "when": "terminalFindWidgetVisible && terminalFocus"
  },
  {
    "key": "meta+right",
    "command": "workbench.action.terminal.moveToLineEnd",
    "when": "terminalFocus"
  },
  {
    "key": "meta+left",
    "command": "workbench.action.terminal.moveToLineStart",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "shift+meta+c",
    "command": "workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+meta+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+meta+left",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+meta+right",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+meta+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus"
  },
  {
    "key": "alt+meta+pagedown",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus"
  },
  {
    "key": "pagedown",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus"
  },
  {
    "key": "meta+end",
    "command": "workbench.action.terminal.scrollToBottom",
    "when": "terminalFocus"
  },
  {
    "key": "meta+down",
    "command": "workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus"
  },
  {
    "key": "meta+up",
    "command": "workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus"
  },
  {
    "key": "meta+home",
    "command": "workbench.action.terminal.scrollToTop",
    "when": "terminalFocus"
  },
  {
    "key": "alt+meta+pageup",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocus"
  },
  {
    "key": "pageup",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus"
  },
  {
    "key": "meta+a",
    "command": "workbench.action.terminal.selectAll",
    "when": "terminalFocus"
  },
  {
    "key": "shift+meta+down",
    "command": "workbench.action.terminal.selectToNextCommand",
    "when": "terminalFocus"
  },
  {
    "key": "shift+meta+up",
    "command": "workbench.action.terminal.selectToPreviousCommand",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+5",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "meta+\\",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "alt+meta+c",
    "command": "workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "alt+meta+c",
    "command": "workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "alt+meta+r",
    "command": "workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "alt+meta+r",
    "command": "workbench.action.terminal.toggleFindRegexTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "alt+meta+w",
    "command": "workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "alt+meta+w",
    "command": "workbench.action.terminal.toggleFindWholeWordTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "alt+meta+0",
    "command": "workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "ctrl+meta+f",
    "command": "workbench.action.toggleFullScreen"
  },
  {
    "key": "meta+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "meta+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+meta+w",
    "command": "workbench.action.toggleTabsVisibility"
  },
  {
    "key": "meta+k z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "meta+numpad_add",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "shift+meta+=",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "meta+=",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "meta+numpad_subtract",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "shift+meta+-",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "meta+-",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "meta+numpad0",
    "command": "workbench.action.zoomReset"
  },
  {
    "key": "shift+meta+m",
    "command": "workbench.actions.view.problems"
  },
  {
    "key": "shift+meta+y",
    "command": "workbench.debug.action.toggleRepl"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.debug.panel.action.clearReplAction",
    "when": "inDebugRepl"
  },
  {
    "key": "meta+k meta+m",
    "command": "workbench.extensions.action.showRecommendedKeymapExtensions"
  },
  {
    "key": "meta+k c",
    "command": "workbench.files.action.compareWithClipboard"
  },
  {
    "key": "meta+k d",
    "command": "workbench.files.action.compareWithSaved"
  },
  {
    "key": "meta+k e",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "shift+meta+d",
    "command": "workbench.view.debug"
  },
  {
    "key": "shift+meta+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "shift+meta+x",
    "command": "workbench.view.extensions"
  },
  {
    "key": "ctrl+shift+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "shift+meta+f",
    "command": "workbench.view.search",
    "when": "!searchViewletVisible"
  },
  {
    "key": "escape",
    "command": "breadcrumbs.selectEditor",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "f11",
    "command": "workbench.action.debug.stepInto",
    "when": "inDebugMode"
  },
  {
    "key": "meta+k",
    "command": "workbench.action.terminal.clear",
    "when": "terminalFocus"
  },
  {
    "key": "enter",
    "command": "debug.renameWatchExpression",
    "when": "watchExpressionsFocused"
  },
  {
    "key": "enter",
    "command": "debug.setVariable",
    "when": "variablesFocused"
  },
  {
    "key": "space",
    "command": "debug.toggleBreakpoint",
    "when": "breakpointsFocused && !inputFocus"
  },
  {
    "key": "alt+meta+backspace",
    "command": "deleteFile",
    "when": "config.files.enableTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "meta+backspace",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !config.files.enableTrash && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "escape",
    "command": "filesExplorer.cancelCut",
    "when": "explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "meta+c",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "meta+x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "meta+v",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "meta+backspace",
    "command": "moveFileToTrash",
    "when": "config.files.enableTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+escape",
    "command": "closeReferenceSearch",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "key": "escape",
    "command": "closeReferenceSearch",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "key": "f4",
    "command": "goToNextReference",
    "when": "referenceSearchVisible"
  },
  {
    "key": "shift+f4",
    "command": "goToPreviousReference",
    "when": "referenceSearchVisible"
  },
  {
    "key": "escape",
    "command": "notifications.hideList",
    "when": "notificationCenterVisible"
  },
  {
    "key": "escape",
    "command": "notifications.hideToasts",
    "when": "notificationToastsVisible"
  },
  {
    "key": "ctrl+-",
    "command": "workbench.action.quickInputBack",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "meta+p",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "shift+meta+p",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+r",
    "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+shift+q",
    "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "meta+f4",
    "command": "extension.node-debug.pickLoadedScript",
    "when": "debugType == 'node2'"
  },
  {
    "key": "meta+f4",
    "command": "extension.node-debug.pickLoadedScript",
    "when": "debugType == 'node'"
  },
  {
    "key": "shift+meta+v",
    "command": "markdown.showPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "shift+alt+f12",
    "command": "references-view.find",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "f10",
    "command": "extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && debugConfigurationType == 'node'"
  },
  {
    "key": "meta+k v",
    "command": "markdown.showPreviewToSide",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "f4",
    "command": "references-view.next",
    "when": "reference-list.hasResult"
  },
  {
    "key": "f11",
    "command": "extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && debugConfigurationType == 'node'"
  },
  {
    "key": "shift+f4",
    "command": "references-view.prev",
    "when": "reference-list.hasResult"
  },
  {
    "key": "alt+meta+.",
    "command": "auto-close-tag.closeTag"
  },
  {
    "key": "meta+b",
    "command": "markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "shift+enter",
    "command": "python.execSelectionInTerminal",
    "when": "editorFocus && !findInputFocussed && !python.datascience.hascodecells && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "meta+i",
    "command": "markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "shift+enter",
    "command": "python.datascience.runcurrentcelladvance",
    "when": "editorFocus && python.datascience.featureenabled && python.datascience.hascodecells"
  },
  {
    "key": "alt+s",
    "command": "markdown.extension.editing.toggleStrikethrough",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+]",
    "command": "markdown.extension.editing.toggleHeadingUp",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+[",
    "command": "markdown.extension.editing.toggleHeadingDown",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "meta+m",
    "command": "markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "enter",
    "command": "markdown.extension.onEnterKey",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown' && vim.mode != 'CommandlineInProgress' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'EasyMotionMode' && vim.mode != 'Normal' && vim.mode != 'Replace' && vim.mode != 'SearchInProgressMode' && vim.mode != 'SurroundInputMode' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine'"
  },
  {
    "key": "meta+enter",
    "command": "markdown.extension.onCtrlEnterKey",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "shift+enter",
    "command": "markdown.extension.onShiftEnterKey",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "tab",
    "command": "markdown.extension.onTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "shift+tab",
    "command": "markdown.extension.onShiftTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "backspace",
    "command": "markdown.extension.onBackspaceKey",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown' && vim.mode != 'CommandlineInProgress' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'EasyMotionMode' && vim.mode != 'Normal' && vim.mode != 'Replace' && vim.mode != 'SearchInProgressMode' && vim.mode != 'SurroundInputMode' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine'"
  },
  {
    "key": "alt+up",
    "command": "markdown.extension.onMoveLineUp",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "alt+down",
    "command": "markdown.extension.onMoveLineDown",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "shift+alt+up",
    "command": "markdown.extension.onCopyLineUp",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "shift+alt+down",
    "command": "markdown.extension.onCopyLineDown",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "meta+]",
    "command": "markdown.extension.onIndentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "meta+[",
    "command": "markdown.extension.onOutdentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "alt+c",
    "command": "markdown.extension.checkTaskList",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "shift+meta+v",
    "command": "markdown.extension.togglePreview",
    "when": "!terminalFocus"
  },
  {
    "key": "meta+k v",
    "command": "markdown.extension.togglePreviewToSide",
    "when": "!terminalFocus"
  }
]

